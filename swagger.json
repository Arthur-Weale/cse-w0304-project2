{
  "swagger": "2.0",
  "info": {
    "title": "Users Api",
    "description": "Users Api",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/api/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create a new book",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Book data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "any"
                        }
                      }
                    },
                    "authorId": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "any"
                        }
                      }
                    },
                    "isbn": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "any"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get a book by ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/books/{id}' */ /*\n\n #swagger.parameters[": {
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update a book",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Book data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "any"
                        }
                      }
                    },
                    "authorId": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "any"
                        }
                      }
                    },
                    "isbn": {
                      "type": "object",
                      "properties": {
                        "example": {
                          "type": "string",
                          "example": "any"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete a book",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/authors": {
      "get": {
        "tags": [
          "Author"
        ],
        "summary": "Get all authors",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Author"
        ],
        "summary": "Post an authors",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  }
}